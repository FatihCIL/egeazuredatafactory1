{
	"name": "Dataflow_sql_to_synapsesql",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SalesOrderHeaderStream_sql",
						"type": "DatasetReference"
					},
					"name": "SalesOrderHeaderStream"
				},
				{
					"dataset": {
						"referenceName": "SalesOrderDetails2",
						"type": "DatasetReference"
					},
					"name": "SalesOrderDetails"
				},
				{
					"dataset": {
						"referenceName": "CustomerTable",
						"type": "DatasetReference"
					},
					"name": "CustomerStream"
				},
				{
					"dataset": {
						"referenceName": "ProductTable",
						"type": "DatasetReference"
					},
					"name": "ProductStream"
				},
				{
					"dataset": {
						"referenceName": "ProductCategory",
						"type": "DatasetReference"
					},
					"name": "ProductCategoryStream"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable1",
						"type": "DatasetReference"
					},
					"name": "FactSalesStream"
				},
				{
					"dataset": {
						"referenceName": "dimCustomer",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DimProduct",
						"type": "DatasetReference"
					},
					"name": "DimentionProductStream"
				}
			],
			"transformations": [
				{
					"name": "HeaderDetail"
				},
				{
					"name": "SelectColumns"
				},
				{
					"name": "SelectCustomerColumns"
				},
				{
					"name": "ProductStreamJoinProductCategoryStream"
				},
				{
					"name": "SelectDimProductColumns"
				},
				{
					"name": "filterNullColorRows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderHeaderStream",
				"source(output(",
				"          SalesOrderID as integer,",
				"          SalesOrderDetailID as integer,",
				"          OrderQty as integer,",
				"          ProductID as integer,",
				"          UnitPrice as decimal(19,4),",
				"          UnitPriceDiscount as decimal(19,4),",
				"          LineTotal as decimal(38,6),",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderDetails",
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomerStream",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductStream",
				"source(output(",
				"          ProductCategoryID as integer,",
				"          ParentProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductCategoryStream",
				"SalesOrderHeaderStream, SalesOrderDetails join(SalesOrderHeaderStream@SalesOrderID == SalesOrderDetails@SalesOrderID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> HeaderDetail",
				"HeaderDetail select(mapColumn(",
				"          SalesOrderID = SalesOrderHeaderStream@SalesOrderID,",
				"          OrderDate,",
				"          ShipDate,",
				"          Status,",
				"          OnlineOrderFlag,",
				"          SalesOrderNumber,",
				"          PurchaseOrderNumber,",
				"          AccountNumber,",
				"          CustomerID,",
				"          ShipToAddressID,",
				"          BillToAddressID,",
				"          ShipMethod,",
				"          CreditCardApprovalCode,",
				"          SubTotal,",
				"          TaxAmt,",
				"          Freight,",
				"          TotalDue,",
				"          Comment,",
				"          rowguid = SalesOrderHeaderStream@rowguid,",
				"          ModifiedDate = SalesOrderHeaderStream@ModifiedDate,",
				"          SalesOrderDetailID,",
				"          OrderQty,",
				"          ProductID,",
				"          UnitPrice,",
				"          UnitPriceDiscount,",
				"          LineTotal,",
				"          rowguid = SalesOrderDetails@rowguid,",
				"          ModifiedDate = SalesOrderDetails@ModifiedDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumns",
				"CustomerStream select(mapColumn(",
				"          CustomerID,",
				"          CompanyName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCustomerColumns",
				"ProductStream, ProductCategoryStream join(ProductStream@ProductCategoryID == ProductCategoryStream@ProductCategoryID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProductStreamJoinProductCategoryStream",
				"ProductStreamJoinProductCategoryStream select(mapColumn(",
				"          ProductID,",
				"          Name = ProductStream@Name,",
				"          ProductNumber,",
				"          Color,",
				"          ProductCategoryID = ProductStream@ProductCategoryID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectDimProductColumns",
				"SelectDimProductColumns filter(!(isNull(Color))) ~> filterNullColorRows",
				"SelectColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesOrderID as integer,",
				"          OrderDate as timestamp,",
				"          CustomerID as integer,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          OrderQty as integer,",
				"          ProductID as integer,",
				"          UnitPrice as decimal(19,4),",
				"          UnitPriceDiscount as decimal(19,4),",
				"          LineTotal as decimal(18,0)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> FactSalesStream",
				"SelectCustomerColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          CompanyName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID,",
				"          CompanyName",
				"     )) ~> sink1",
				"filterNullColorRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductID as integer,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          ProductCategoryID as integer,",
				"          ProductCategoryName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductID,",
				"          ProductNumber,",
				"          Color,",
				"          ProductCategoryID,",
				"          ProductCategoryName = Name",
				"     )) ~> DimentionProductStream"
			]
		}
	}
}